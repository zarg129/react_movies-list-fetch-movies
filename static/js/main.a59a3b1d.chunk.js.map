{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/req.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getFilm","id","fetch","then","response","json","FindMovie","addMovie","useState","setTitle","newMovie","setMovie","error","setError","handleSubmit","e","preventDefault","htmlFor","onSubmit","type","placeholder","value","onChange","target","onClick","card","Response","Title","Plot","Poster","imdbID","disabled","App","data","setstate","moviToAdd","find","ReactDOM","render","document","getElementById"],"mappings":"8wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MACAC,EAFuB,EAEvBA,YACAC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SCP3BG,G,MAAU,SAAAC,GAAE,OAHTf,EAGqB,GAAD,OAAIe,GAHfC,MAAM,GAAD,OADb,0CACa,cAAkBhB,IAC7CiB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UADb,IAAAnB,ICKHoB,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACfC,mBAAS,IADM,mBAClCtB,EADkC,KAC3BuB,EAD2B,OAEZD,mBAAS,MAFG,mBAElCE,EAFkC,KAExBC,EAFwB,OAGfH,oBAAS,GAHM,mBAGlCI,EAHkC,KAG3BC,EAH2B,KAwBnCC,EAAe,SAACC,GACpBA,EAAEC,iBAEFT,EAASG,GAETD,EAAS,IACTE,EAAS,MACTE,GAAS,IAGX,OACE,oCACE,0BAAMvB,UAAU,cACd,yBAAKA,UAAU,SACb,2BACEA,UAAU,QACV2B,QAAQ,cACRC,SAAU,SAAAH,GAAC,OAAID,EAAaC,KAH9B,eASA,yBAAKzB,UAAU,WACb,2BACE6B,KAAK,OACLlB,GAAG,cACHmB,YAAY,0BACZ9B,UAAU,kBACV+B,MAAOnC,EACPoC,SAAU,SAAAP,GAhDpBN,EAgDsCM,EAhDvBQ,OAAOF,WAmDfT,GACC,uBAAGtB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE6B,KAAK,SACL7B,UAAU,kBACVkC,QA5DK,WACfxB,EAAQd,GACLiB,MAAK,SAACsB,GACa,SAAlBA,EAAKC,SACDf,EAAS,CACTzB,MAAOuC,EAAKE,MACZxC,YAAasC,EAAKG,KAClBxC,OAAQqC,EAAKI,OACbxC,QAAQ,8BAAD,OAAgCoC,EAAKK,OAArC,KACP/B,OAAQ0B,EAAKK,SAEbjB,EAASY,QA8CT,iBASF,yBAAKnC,UAAU,WACb,4BACE6B,KAAK,SACL7B,UAAU,oBACVkC,QAASV,EACTiB,UAAWrB,GAJb,sBAWLA,GACC,yBAAKpB,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcoB,M,OC1FZsB,EAAM,WAAO,IAAD,EACIxB,mBAASyB,GADb,mBAChBtC,EADgB,KACRuC,EADQ,KAavB,OACE,yBAAK5C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWiB,SAhBA,SAAC4B,GACGxC,EAAOyC,MAAK,SAAAvC,GAAK,OAAIA,EAAME,SAAWoC,EAAUpC,WAMnEmC,EAAS,GAAD,mBAAKvC,GAAL,CAAawC,WCXzBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a59a3b1d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description,\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const BASE_URL = 'http://www.omdbapi.com/?apikey=317f0705';\nconst request = title => fetch(`${BASE_URL}&t=${title}`)\n  .then(response => response.json());\n\nexport const getFilm = id => request(`${id}`);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport { getFilm } from '../req';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [newMovie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n\n  const handleChange = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const findFilm = () => {\n    getFilm(title)\n      .then((card) => {\n        card.Response === 'True'\n          ? setMovie({\n            title: card.Title,\n            description: card.Plot,\n            imgUrl: card.Poster,\n            imdbUrl: `https://www.imdb.com/title/${card.imdbID}/`,\n            imdbId: card.imdbID,\n          })\n          : setError(card);\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    addMovie(newMovie);\n\n    setTitle('');\n    setMovie(null);\n    setError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"movie-title\"\n            onSubmit={e => handleSubmit(e)}\n\n          >\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={title}\n              onChange={e => handleChange(e)}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findFilm}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleSubmit}\n              disabled={!newMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {newMovie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setstate] = useState(data);\n\n  const addMovie = (moviToAdd) => {\n    const checkMovie = movies.find(movie => movie.imdbId === moviToAdd.imdbId);\n\n    if (checkMovie) {\n      return;\n    }\n\n    setstate([...movies, moviToAdd]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}